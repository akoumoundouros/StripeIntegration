@model StripeIntegration.Models.ViewModels.HomeViewModel
@using System.Web.Optimization
@using System.Globalization

<script type="text/javascript" src="https://js.stripe.com/v2/"></script>
<!-- SmoothScroll -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/latest/TweenMax.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/latest/plugins/ScrollToPlugin.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {

        var $window = $(window);
        var scrollTime = 0.7;
        var scrollDistance = 350;

        $window.on("mousewheel DOMMouseScroll", function (event) {

            event.preventDefault();

            var delta = event.originalEvent.wheelDelta / 120 || -event.originalEvent.detail / 3;
            var scrollTop = $window.scrollTop();
            var finalScroll = scrollTop - parseInt(delta * scrollDistance);

            TweenMax.to($window, scrollTime, {
                scrollTo: { y: finalScroll, autoKill: true },
                ease: Power1.easeOut,
                overwrite: 5
            });

        });
    });
</script>

<h2 class="text-danger text-uppercase">Home <a href="/Products/Index">Products</a></h2>

<div class="container">
    <h3>Product List</h3>
    <div class="row col-md-4">
        <table class="table table-bordered">
            @foreach (var product in Model.products)
            {
                <tr>
                    <td>
                        <button class="btn btn-default product" id="@product.name-@product.price">
                            <span class="glyphicon glyphicon-list-alt"></span>
                            @product.name
                            @string.Format(new CultureInfo("en-us"), "{0:C}", (decimal)product.price / 100)
                        </button>
                    </td>
                </tr>
            }
        </table>
        <div class="row">
            <div class="col-md-4">
                <div class="alert alert-info" role="alert">
                    <span class='glyphicon glyphicon-shopping-cart'></span>
                    <span id="displayPrice"></span>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <h3>Card Details</h3>
    <form name="cardDetails" id="purchaseForm" method="post">
        <div class="row">
            <div class="form-group ccDetails col-md-4">
                <label for="CardHolderName">Name as it appears on the card<span class="required">*</span></label>
                @Html.TextBoxFor(m => m.cardDetails.CardHolderName, new { id = "txtCardHolderName", @class = "form-control" })
            </div>
        </div>
        <div class="row">
            <div class="form-group ccDetails col-md-4">
                <label for="CardNumber">Card number<span class="required">*</span></label>
                <input type="text" name="CardNumber" value="4242424242424242" id="txtCardNumber" placeholder="Card Number e.g 1234..." class="form-control" />
            </div>
        </div>
        <div class="row">
            <div class="form-group ccDetails col-md-2">
                <div><label for="expired">Expiry date<span class="required">*</span></label></div>
                <select name="ExpiryMonth" id="txtExpiryMonth" class="form-control">
                    @for (var i = 01; i < 13; i++)
                    {
                        <option value="@i.ToString("00")">@i.ToString("00")</option>
                    }
                </select>
                <select name="ExpiryYear" id="txtExpiryYear" class="form-control">
                    @{
                        for (int i = DateTime.UtcNow.Year; i <= DateTime.UtcNow.Year + 5; i++)
                        {
                            <option value="@i" @(i == 2017 ? "selected" : "") >@i</option>
                        }
                    }
                </select>
                <input type="hidden" name="expired" />
            </div>
        </div>
        <div class="row">
            <div class="col-sm-2">
                <div class="form-group ccDetails">
                    <label for="ccDetails.ccv">CCV<span class="required">*</span></label>
                    <input type="text" name="Cvc" id="txtCvc" placeholder="e.g 987" class="form-control" value="987"/>
                    <div class="formHint">
                        3 digit code on the back of your card
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <input onclick="getStripeToken()" value="Purchase" class="btn btn-danger" id="sendQuery" />
        </div>
        @Html.HiddenFor(m => m.cardDetails.stripeToken, new { id = "hdnToken" })
        @Html.HiddenFor(m => m.cardDetails.price, new { id = "price" })
        @Html.HiddenFor(m => m.cardDetails.description, new {id="description"})
    </form>
</div>

@if (Model.transactions.Count() > 0)
{
    <div class="container">
        <h3>Transaction History</h3>
        <div class="row">
            <div class="col-md-6">
                <table class="table table-striped">
                    <tr><th>Item</th><th>Cost</th></tr>
                    @foreach (var item in Model.transactions)
                    {
                        <tr>
                            <td>@item.Description</td>
                            <td>@string.Format(new CultureInfo("en-us"),"{0:C}", (decimal)item.Amount / 100)</td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>
}


<!-- Stripe Request Handler -->
<script type="text/javascript">
    Stripe.setPublishableKey("@StripeIntegration.Services.AppConfig.stripePublicKey");
    var $form = $('#purchaseForm');

    function getStripeToken() {
        $('#sendQuery').attr('value', 'Processing');
        $('#sendQuery').attr('disabled', 'disabled');
        Stripe.card.createToken({
            name: $('#txtCardHolderName').val(),
            number: $('#txtCardNumber').val(),
            cvc: $('#txtCvc').val(),
            exp_month: $('#txtExpiryMonth').val(),
            exp_year: $('#txtExpiryYear').val()
        }, stripeResponseHandler);
    };

    function stripeResponseHandler(status, response) {
        if (response.error) {
            // Show the errors on the form
            alert(response.error.message);
            $('#sendQuery').removeAttr("disabled");
            $('#sendQuery').attr('value', button);
        } else {
            // response contains id and card, which contains additional card details
            var token = response.id;
            // Insert the token into the form so it gets submitted to the server
            $('#hdnToken').val(token);
            // and submit
            $form.get(0).submit();
        }
    }
</script>

<!-- Product selection, unsafe -->
<script type="text/javascript">
    $(document).ready(function () {
        $(".product").click(function () {
            var price = this.id.substring(this.id.indexOf("-") + 1);
            var desc = this.id.substring(0, this.id.indexOf("-"));
            $("#description").val(desc);
            $("#price").val(price);
            $("#displayPrice").html("$"+price / 100);
        });
    });
</script>